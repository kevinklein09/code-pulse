{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nclass AuthInterceptor {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  intercept(request, next) {\n    const authRequest = request.clone({\n      setHeaders: {\n        'Authorization': this.cookieService.get('Authorization')\n      }\n    });\n    return next.handle(authRequest);\n  }\n  shouldInterceptRequest(request) {\n    return request.urlWithParams.indexOf('AddAuth=true', 0) > -1 ? true : false;\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","constructor","cookieService","intercept","request","next","authRequest","clone","setHeaders","get","handle","shouldInterceptRequest","urlWithParams","indexOf","_","i0","ɵɵinject","i1","CookieService","_2","factory","ɵfac"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\core\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private cookieService: CookieService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const authRequest = request.clone({\n      setHeaders: {\n        'Authorization': this.cookieService.get('Authorization')\n      }\n    });\n\n    return next.handle(authRequest);\n  }\n\n  private shouldInterceptRequest(request: HttpRequest<any>): boolean {\n    return request.urlWithParams.indexOf('AddAuth=true', 0) > -1? true: false;\n  }\n}\n"],"mappings":";;AAUA,MACaA,eAAe;EAE1BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAkB;EAEnDC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,WAAW,GAAGF,OAAO,CAACG,KAAK,CAAC;MAChCC,UAAU,EAAE;QACV,eAAe,EAAE,IAAI,CAACN,aAAa,CAACO,GAAG,CAAC,eAAe;;KAE1D,CAAC;IAEF,OAAOJ,IAAI,CAACK,MAAM,CAACJ,WAAW,CAAC;EACjC;EAEQK,sBAAsBA,CAACP,OAAyB;IACtD,OAAOA,OAAO,CAACQ,aAAa,CAACC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAE,IAAI,GAAE,KAAK;EAC3E;EAAC,QAAAC,CAAA,G;qBAhBUd,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfnB,eAAe;IAAAoB,OAAA,EAAfpB,eAAe,CAAAqB;EAAA;;SAAfrB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}