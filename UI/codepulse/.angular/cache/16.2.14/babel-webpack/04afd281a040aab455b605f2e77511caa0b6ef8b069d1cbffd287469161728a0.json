{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nlet ImageService = class ImageService {\n  constructor(http) {\n    this.http = http;\n    this.selectedImage = new BehaviorSubject({\n      id: '',\n      fileExtension: '',\n      fileName: '',\n      title: '',\n      url: ''\n    });\n  }\n  getAllImages() {\n    return this.http.get(`${environment.apiBaseUrl}/api/images`);\n  }\n  uploadImage(file, fileName, title) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', title);\n    return this.http.post(`${environment.apiBaseUrl}/api/images`, formData);\n  }\n  selectImage(image) {\n    this.selectedImage.next(image);\n  }\n  onSelectImage() {\n    return this.selectedImage.asObservable();\n  }\n};\nImageService = __decorate([Injectable({\n  providedIn: 'root'\n})], ImageService);\nexport { ImageService };","map":{"version":3,"names":["Injectable","BehaviorSubject","environment","ImageService","constructor","http","selectedImage","id","fileExtension","fileName","title","url","getAllImages","get","apiBaseUrl","uploadImage","file","formData","FormData","append","post","selectImage","image","next","onSelectImage","asObservable","__decorate","providedIn"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\shared\\components\\image-selector\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BlogImage } from '../../models/blog-image.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  selectedImage: BehaviorSubject<BlogImage> = new BehaviorSubject<BlogImage>({\n    id: '',\n    fileExtension: '',\n    fileName: '',\n    title: '',\n    url: ''\n  })\n\n  constructor(private http: HttpClient) { }\n\n  getAllImages(): Observable<BlogImage[]> {\n    return this.http.get<BlogImage[]>(`${environment.apiBaseUrl}/api/images`)\n  }\n\n  uploadImage(file: File, fileName: string, title: string): Observable<BlogImage> {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', title);\n\n    return this.http.post<BlogImage>(`${environment.apiBaseUrl}/api/images`, formData);\n  }\n\n  selectImage(image: BlogImage): void {\n    this.selectedImage.next(image);\n  }\n\n  onSelectImage(): Observable<BlogImage> {\n    return this.selectedImage.asObservable();\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAoB,MAAM;AAGlD,SAASC,WAAW,QAAQ,8BAA8B;AAK1D,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EASvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,aAAa,GAA+B,IAAIL,eAAe,CAAY;MACzEM,EAAE,EAAE,EAAE;MACNC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;KACN,CAAC;EAEsC;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAc,GAAGX,WAAW,CAACY,UAAU,aAAa,CAAC;EAC3E;EAEAC,WAAWA,CAACC,IAAU,EAAEP,QAAgB,EAAEC,KAAa;IACrD,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7BC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACrCQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,KAAK,CAAC;IAE/B,OAAO,IAAI,CAACL,IAAI,CAACe,IAAI,CAAY,GAAGlB,WAAW,CAACY,UAAU,aAAa,EAAEG,QAAQ,CAAC;EACpF;EAEAI,WAAWA,CAACC,KAAgB;IAC1B,IAAI,CAAChB,aAAa,CAACiB,IAAI,CAACD,KAAK,CAAC;EAChC;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAAClB,aAAa,CAACmB,YAAY,EAAE;EAC1C;CACD;AA/BYtB,YAAY,GAAAuB,UAAA,EAHxB1B,UAAU,CAAC;EACV2B,UAAU,EAAE;CACb,CAAC,C,EACWxB,YAAY,CA+BxB;SA/BYA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}