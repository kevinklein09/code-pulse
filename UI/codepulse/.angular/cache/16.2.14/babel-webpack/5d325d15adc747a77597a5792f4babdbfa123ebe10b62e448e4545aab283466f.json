{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditBlogpostComponent = class EditBlogpostComponent {\n  constructor(route, blogPostService, categoryService) {\n    this.route = route;\n    this.blogPostService = blogPostService;\n    this.categoryService = categoryService;\n    this.id = null;\n  }\n  ngOnInit() {\n    this.categories$ = this.categoryService.getAllCategories();\n    this.routeSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        // Get BlogPost From API\n        if (this.id) {\n          this.blogPostService.getBlogPostById(this.id).subscribe({\n            next: response => {\n              this.model = response;\n              this.selectedCategories = response.categories.map(x => x.id);\n            }\n          });\n        }\n      }\n    });\n  }\n  onFormSubmit() {}\n  ngOnDestroy() {\n    this.routeSubscription?.unsubscribe();\n  }\n};\nEditBlogpostComponent = __decorate([Component({\n  selector: 'app-edit-blogpost',\n  templateUrl: './edit-blogpost.component.html',\n  styleUrls: ['./edit-blogpost.component.css']\n})], EditBlogpostComponent);\nexport { EditBlogpostComponent };","map":{"version":3,"names":["Component","EditBlogpostComponent","constructor","route","blogPostService","categoryService","id","ngOnInit","categories$","getAllCategories","routeSubscription","paramMap","subscribe","next","params","get","getBlogPostById","response","model","selectedCategories","categories","map","x","onFormSubmit","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\features\\blog-post\\edit-blogpost\\edit-blogpost.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { BlogPostService } from '../services/blog-post.service';\nimport { BlogPost } from '../models/blog-post.model';\nimport { CategoryService } from '../../category/services/category.service';\nimport { Category } from '../../category/models/category.model';\n\n@Component({\n  selector: 'app-edit-blogpost',\n  templateUrl: './edit-blogpost.component.html',\n  styleUrls: ['./edit-blogpost.component.css']\n})\nexport class EditBlogpostComponent implements OnInit, OnDestroy {\n  id: string | null = null;\n  model?: BlogPost;\n  categories$?: Observable<Category[]>;\n  selectedCategories?: string[];\n\n\n  routeSubscription?: Subscription;\n\n\n  constructor(private route: ActivatedRoute,\n    private blogPostService: BlogPostService,\n    private categoryService: CategoryService) {\n\n  }\n\n  ngOnInit(): void {\n    this.categories$ = this.categoryService.getAllCategories();\n    \n    this.routeSubscription = this.route.paramMap.subscribe({\n      next: (params) => {\n        this.id = params.get('id');\n\n        // Get BlogPost From API\n        if(this.id) {\n          this.blogPostService.getBlogPostById(this.id).subscribe({\n            next: (response) => {\n              this.model = response;\n              this.selectedCategories = response.categories.map(x => x.id);\n            }\n          });\n        }\n      }\n    })\n  }\n\n\n  onFormSubmit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n    this.routeSubscription?.unsubscribe()\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAa5D,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAUhCC,YAAoBC,KAAqB,EAC/BC,eAAgC,EAChCC,eAAgC;IAFtB,KAAAF,KAAK,GAALA,KAAK;IACf,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,eAAe,GAAfA,eAAe;IAXzB,KAAAC,EAAE,GAAkB,IAAI;EAaxB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,eAAe,CAACI,gBAAgB,EAAE;IAE1D,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,SAAS,CAAC;MACrDC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACR,EAAE,GAAGQ,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAE1B;QACA,IAAG,IAAI,CAACT,EAAE,EAAE;UACV,IAAI,CAACF,eAAe,CAACY,eAAe,CAAC,IAAI,CAACV,EAAE,CAAC,CAACM,SAAS,CAAC;YACtDC,IAAI,EAAGI,QAAQ,IAAI;cACjB,IAAI,CAACC,KAAK,GAAGD,QAAQ;cACrB,IAAI,CAACE,kBAAkB,GAAGF,QAAQ,CAACG,UAAU,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,CAAC;YAC9D;WACD,CAAC;;MAEN;KACD,CAAC;EACJ;EAGAiB,YAAYA,CAAA,GAEZ;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACd,iBAAiB,EAAEe,WAAW,EAAE;EACvC;CAED;AA7CYxB,qBAAqB,GAAAyB,UAAA,EALjC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW5B,qBAAqB,CA6CjC;SA7CYA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}