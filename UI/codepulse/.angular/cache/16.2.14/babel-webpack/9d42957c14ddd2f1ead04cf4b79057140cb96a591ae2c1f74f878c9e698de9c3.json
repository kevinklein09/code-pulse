{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditCategoryComponent = class EditCategoryComponent {\n  constructor(route, categoryService, router) {\n    this.route = route;\n    this.categoryService = categoryService;\n    this.router = router;\n    this.id = null;\n  }\n  ngOnInit() {\n    this.paramsSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        if (this.id) {\n          // get the data from the API for this category Id\n          this.categoryService.getCategoryById(this.id).subscribe({\n            next: response => {\n              this.category = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  onFormSubmit() {\n    const UpdateCategoryRequest = {\n      name: this.category?.name ?? '',\n      urlHandle: this.category?.urlHandle ?? ''\n    };\n    // pass this object to service\n    if (this.id) {\n      this.categoryService.updateCategory(this.id, UpdateCategoryRequest).subscribe({\n        next: response => {}\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.paramsSubscription?.unsubscribe();\n  }\n};\nEditCategoryComponent = __decorate([Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})], EditCategoryComponent);\nexport { EditCategoryComponent };","map":{"version":3,"names":["Component","EditCategoryComponent","constructor","route","categoryService","router","id","ngOnInit","paramsSubscription","paramMap","subscribe","next","params","get","getCategoryById","response","category","onFormSubmit","UpdateCategoryRequest","name","urlHandle","updateCategory","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\features\\category\\edit-category\\edit-category.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CategoryService } from '../services/category.service';\nimport { Category } from '../models/category.model';\nimport { UpdateCategoryRequest } from '../models/update-category-request.model';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})\nexport class EditCategoryComponent implements OnInit, OnDestroy {\n\n  id: string | null = null;\n  paramsSubscription?: Subscription;\n  category?: Category;\n\n  constructor (private route: ActivatedRoute,\n    private categoryService: CategoryService,\n  private router: Router) {\n\n  }\n\n\n  ngOnInit(): void {\n    this.paramsSubscription =  this.route.paramMap.subscribe({\n      next: (params) => {\n        this.id = params.get('id');\n\n        if (this.id) {\n          // get the data from the API for this category Id\n          this.categoryService.getCategoryById(this.id)\n          .subscribe({\n            next: (response) => {\n              this.category = response;\n            }\n          });\n        }\n      }\n    })\n  }\n\n  onFormSubmit(): void {\n    const UpdateCategoryRequest: UpdateCategoryRequest = {\n      name: this.category?.name ?? '',\n      urlHandle: this.category?.urlHandle ?? ''\n    };\n\n    // pass this object to service\n    if (this.id) {\n      this.categoryService.updateCategory(this.id, UpdateCategoryRequest)\n      .subscribe({\n        next: (response) => {\n\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.paramsSubscription?.unsubscribe();\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAY5D,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAMhCC,YAAqBC,KAAqB,EAChCC,eAAgC,EAClCC,MAAc;IAFD,KAAAF,KAAK,GAALA,KAAK;IAChB,KAAAC,eAAe,GAAfA,eAAe;IACjB,KAAAC,MAAM,GAANA,MAAM;IANd,KAAAC,EAAE,GAAkB,IAAI;EAQxB;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,GAAI,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,SAAS,CAAC;MACvDC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACN,EAAE,GAAGM,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAE1B,IAAI,IAAI,CAACP,EAAE,EAAE;UACX;UACA,IAAI,CAACF,eAAe,CAACU,eAAe,CAAC,IAAI,CAACR,EAAE,CAAC,CAC5CI,SAAS,CAAC;YACTC,IAAI,EAAGI,QAAQ,IAAI;cACjB,IAAI,CAACC,QAAQ,GAAGD,QAAQ;YAC1B;WACD,CAAC;;MAEN;KACD,CAAC;EACJ;EAEAE,YAAYA,CAAA;IACV,MAAMC,qBAAqB,GAA0B;MACnDC,IAAI,EAAE,IAAI,CAACH,QAAQ,EAAEG,IAAI,IAAI,EAAE;MAC/BC,SAAS,EAAE,IAAI,CAACJ,QAAQ,EAAEI,SAAS,IAAI;KACxC;IAED;IACA,IAAI,IAAI,CAACd,EAAE,EAAE;MACX,IAAI,CAACF,eAAe,CAACiB,cAAc,CAAC,IAAI,CAACf,EAAE,EAAEY,qBAAqB,CAAC,CAClER,SAAS,CAAC;QACTC,IAAI,EAAGI,QAAQ,IAAI,CAEnB;OACD,CAAC;;EAEN;EAEAO,WAAWA,CAAA;IACT,IAAI,CAACd,kBAAkB,EAAEe,WAAW,EAAE;EACxC;CAED;AApDYtB,qBAAqB,GAAAuB,UAAA,EALjCxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW1B,qBAAqB,CAoDjC;SApDYA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}