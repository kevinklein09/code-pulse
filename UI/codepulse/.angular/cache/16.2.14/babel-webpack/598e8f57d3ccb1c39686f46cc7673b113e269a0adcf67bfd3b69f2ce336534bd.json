{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const cookieService = inject(CookieService);\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  // Check for the JWT Token\n  let token = cookieService.get('Authorization');\n  if (token) {} else {\n    // Logout\n    authService.logout();\n    return;\n  }\n};","map":{"version":3,"names":["inject","Router","CookieService","AuthService","authGuard","route","state","cookieService","authService","router","token","get","logout"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\features\\auth\\guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const cookieService = inject(CookieService);\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  // Check for the JWT Token\n  let token = cookieService.get('Authorization');\n\n  if (token) {\n\n  } else {\n    // Logout\n    authService.logout();\n    return \n  }\n\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,aAAa,GAAGP,MAAM,CAACE,aAAa,CAAC;EAC3C,MAAMM,WAAW,GAAGR,MAAM,CAACG,WAAW,CAAC;EACvC,MAAMM,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE7B;EACA,IAAIS,KAAK,GAAGH,aAAa,CAACI,GAAG,CAAC,eAAe,CAAC;EAE9C,IAAID,KAAK,EAAE,C,CAEV,MAAM;IACL;IACAF,WAAW,CAACI,MAAM,EAAE;IACpB;;AAGJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}