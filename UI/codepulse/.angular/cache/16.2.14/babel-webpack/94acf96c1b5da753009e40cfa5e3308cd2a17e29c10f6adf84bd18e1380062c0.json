{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nclass CategoryService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n  }\n  getAllCategories() {\n    return this.http.get(`${environment.apiBaseUrl}/api/categories`);\n  }\n  getCategoryById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/categories/${id}`);\n  }\n  addCategory(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/categories?addAuth=true`, model);\n  }\n  updateCategory(id, updateCategoryRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`, updateCategoryRequest);\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`);\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CategoryService };","map":{"version":3,"names":["environment","CategoryService","constructor","http","cookieService","getAllCategories","get","apiBaseUrl","getCategoryById","id","addCategory","model","post","updateCategory","updateCategoryRequest","put","deleteCategory","delete","_","i0","ɵɵinject","i1","HttpClient","i2","CookieService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\features\\category\\services\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AddCategoryRequest } from '../models/add-category-request.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category } from '../models/category.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UpdateCategoryRequest } from '../models/update-category-request.model';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private cookieService: CookieService\r\n  ) { }\r\n\r\n  getAllCategories(): Observable<Category[]> {\r\n    return this.http.get<Category[]>(`${environment.apiBaseUrl}/api/categories`)\r\n  }\r\n\r\n  getCategoryById(id: string): Observable<Category> {\r\n    return this.http.get<Category> (`${environment.apiBaseUrl}/api/categories/${id}`)\r\n  }\r\n\r\n  addCategory(model: AddCategoryRequest): Observable<void> {\r\n    return this.http.post<void>(`${environment.apiBaseUrl}/api/categories?addAuth=true`, model)\r\n  }\r\n\r\n  updateCategory(id: string, updateCategoryRequest: UpdateCategoryRequest) : Observable<Category> {\r\n    return this.http.put<Category>(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`, updateCategoryRequest);\r\n  }\r\n\r\n  deleteCategory(id: string) : Observable<Category> {\r\n    return this.http.delete<Category>(`${environment.apiBaseUrl}/api/categories/${id}?addAuth=true`)\r\n  }\r\n}\r\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,8BAA8B;;;;AAI1D,MAGaC,eAAe;EAE1BC,YAAoBC,IAAgB,EAC1BC,aAA4B;IADlB,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,aAAa,GAAbA,aAAa;EACnB;EAEJC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,GAAGN,WAAW,CAACO,UAAU,iBAAiB,CAAC;EAC9E;EAEAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAY,GAAGN,WAAW,CAACO,UAAU,mBAAmBE,EAAE,EAAE,CAAC;EACnF;EAEAC,WAAWA,CAACC,KAAyB;IACnC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,GAAGZ,WAAW,CAACO,UAAU,8BAA8B,EAAEI,KAAK,CAAC;EAC7F;EAEAE,cAAcA,CAACJ,EAAU,EAAEK,qBAA4C;IACrE,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAW,GAAGf,WAAW,CAACO,UAAU,mBAAmBE,EAAE,eAAe,EAAEK,qBAAqB,CAAC;EACtH;EAEAE,cAAcA,CAACP,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACc,MAAM,CAAW,GAAGjB,WAAW,CAACO,UAAU,mBAAmBE,EAAE,eAAe,CAAC;EAClG;EAAC,QAAAS,CAAA,G;qBAxBUjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfxB,eAAe;IAAAyB,OAAA,EAAfzB,eAAe,CAAA0B,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEP3B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}