{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BlogDetailsComponent = class BlogDetailsComponent {\n  constructor(route, blogPostService) {\n    this.route = route;\n    this.blogPostService = blogPostService;\n    this.url = null;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        this.url = params.get('url');\n      }\n    });\n    // Fetch blog details by url\n    if (this.url) {\n      this.blogPost$ = this.blogPostService.getBlogPostByUrlHandle(this.url);\n    }\n  }\n};\nBlogDetailsComponent = __decorate([Component({\n  selector: 'app-blog-details',\n  templateUrl: './blog-details.component.html',\n  styleUrls: ['./blog-details.component.css']\n})], BlogDetailsComponent);\nexport { BlogDetailsComponent };","map":{"version":3,"names":["Component","BlogDetailsComponent","constructor","route","blogPostService","url","ngOnInit","paramMap","subscribe","next","params","get","blogPost$","getBlogPostByUrlHandle","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\features\\public\\blog-details\\blog-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BlogPostService } from '../../blog-post/services/blog-post.service';\nimport { Observable } from 'rxjs';\nimport { BlogPost } from '../../blog-post/models/blog-post.model';\n\n@Component({\n  selector: 'app-blog-details',\n  templateUrl: './blog-details.component.html',\n  styleUrls: ['./blog-details.component.css']\n})\nexport class BlogDetailsComponent implements OnInit {\n  url: string | null = null\n  blogPost$? : Observable<BlogPost>;\n\n  constructor(private route: ActivatedRoute,\n    private blogPostService: BlogPostService) {\n\n  }\n  ngOnInit(): void {\n    this.route.paramMap\n    .subscribe({\n      next: (params) => {\n        this.url = params.get('url')\n      }\n    });\n\n    // Fetch blog details by url\n    if (this.url) {\n      this.blogPost$ = this.blogPostService.getBlogPostByUrlHandle(this.url);\n    }\n\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAWjD,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAI/BC,YAAoBC,KAAqB,EAC/BC,eAAgC;IADtB,KAAAD,KAAK,GAALA,KAAK;IACf,KAAAC,eAAe,GAAfA,eAAe;IAJzB,KAAAC,GAAG,GAAkB,IAAI;EAMzB;EACAC,QAAQA,CAAA;IACN,IAAI,CAACH,KAAK,CAACI,QAAQ,CAClBC,SAAS,CAAC;MACTC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACL,GAAG,GAAGK,MAAM,CAACC,GAAG,CAAC,KAAK,CAAC;MAC9B;KACD,CAAC;IAEF;IACA,IAAI,IAAI,CAACN,GAAG,EAAE;MACZ,IAAI,CAACO,SAAS,GAAG,IAAI,CAACR,eAAe,CAACS,sBAAsB,CAAC,IAAI,CAACR,GAAG,CAAC;;EAG1E;CACD;AAtBYJ,oBAAoB,GAAAa,UAAA,EALhCd,SAAS,CAAC;EACTe,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhB,oBAAoB,CAsBhC;SAtBYA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}