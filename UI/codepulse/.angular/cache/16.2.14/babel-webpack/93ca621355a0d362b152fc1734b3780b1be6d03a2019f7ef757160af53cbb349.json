{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.$user = new BehaviorSubject(undefined);\n  }\n  login(request) {\n    return this.http.post(`${environment.apiBaseUrl}/api/auth/login`, {\n      email: request.email,\n      password: request.password\n    });\n  }\n  setUser(user) {\n    this.$user.next(user);\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n  user() {\n    return this.$user.asObservable();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","environment","AuthService","constructor","http","$user","undefined","login","request","post","apiBaseUrl","email","password","setUser","user","next","localStorage","setItem","roles","join","asObservable","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\features\\auth\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoginRequest } from '../models/login-request.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LoginResponse } from '../models/login-response.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  $user = new BehaviorSubject<User | undefined>(undefined);\n\n  constructor(private http: HttpClient) { }\n\n  login(request: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(`${environment.apiBaseUrl}/api/auth/login`, {\n      email: request.email,\n      password: request.password\n    });\n  }\n\n\n  setUser(user: User):void {\n    this.$user.next(user);\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n\n  user() : Observable<User | undefined> {\n    return this.$user.asObservable();\n  }\n\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAGlD,SAASC,WAAW,QAAQ,8BAA8B;;;AAG1D,MAGaC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,KAAK,GAAG,IAAIL,eAAe,CAAmBM,SAAS,CAAC;EAEhB;EAExCC,KAAKA,CAACC,OAAqB;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,GAAGR,WAAW,CAACS,UAAU,iBAAiB,EAAE;MAC/EC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,QAAQ,EAAEJ,OAAO,CAACI;KACnB,CAAC;EACJ;EAGAC,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACT,KAAK,CAACU,IAAI,CAACD,IAAI,CAAC;IACrBE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,IAAI,CAACH,KAAK,CAAC;IAC9CK,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,IAAI,CAACI,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC1D;EAEAL,IAAIA,CAAA;IACF,OAAO,IAAI,CAACT,KAAK,CAACe,YAAY,EAAE;EAClC;EAAC,QAAAC,CAAA,G;qBAtBUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEP3B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}