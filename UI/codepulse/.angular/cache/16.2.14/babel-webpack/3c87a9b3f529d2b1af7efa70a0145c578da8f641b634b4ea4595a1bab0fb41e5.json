{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ImageService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllImages() {\n    return this.http.get(`${environment.apiBaseUrl}/api/images`);\n  }\n  uploadImage(file, fileName, title) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', title);\n    return this.http.post(`${environment.apiBaseUrl}/api/images`, formData);\n  }\n  selectImage(image) {}\n  static #_ = this.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ImageService };","map":{"version":3,"names":["environment","ImageService","constructor","http","getAllImages","get","apiBaseUrl","uploadImage","file","fileName","title","formData","FormData","append","post","selectImage","image","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kevink\\projects\\udemy\\CodePulse\\UI\\codepulse\\src\\app\\shared\\components\\image-selector\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BlogImage } from '../../models/blog-image.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllImages(): Observable<BlogImage[]> {\n    return this.http.get<BlogImage[]>(`${environment.apiBaseUrl}/api/images`)\n  }\n\n  uploadImage(file: File, fileName: string, title: string): Observable<BlogImage> {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', title);\n\n    return this.http.post<BlogImage>(`${environment.apiBaseUrl}/api/images`, formData);\n  }\n\n  selectImage(image: BlogImage): void {\n    \n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAE1D,MAGaC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,GAAGL,WAAW,CAACM,UAAU,aAAa,CAAC;EAC3E;EAEAC,WAAWA,CAACC,IAAU,EAAEC,QAAgB,EAAEC,KAAa;IACrD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAC7BG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACrCE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;IAE/B,OAAO,IAAI,CAACP,IAAI,CAACW,IAAI,CAAY,GAAGd,WAAW,CAACM,UAAU,aAAa,EAAEK,QAAQ,CAAC;EACpF;EAEAI,WAAWA,CAACC,KAAgB,GAE5B;EAAC,QAAAC,CAAA,G;qBAnBUhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPxB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}